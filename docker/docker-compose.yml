version: '3'

networks: 
  conquerer:

services:

  # Nginx Prod
  nginx:
    container_name: conquerer_nginx
    build: 
      context: .
      dockerfile: nginx/nginx.yml
    depends_on:
      - postgres
      - app
    networks:
      - conquerer
    ports:
        - 80:80

  postgres:
    image: postgres:latest
    container_name: conquerer_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - conquerer
    ports:
      - 5432:5432
    volumes:
      - ./db/postgresql:/var/lib/postgresql/data

  # Node.js express api server 
  app:
    container_name: conquerer_app
    build: 
      context: .
      dockerfile: node/node.yml
    depends_on:
      - postgres
    volumes:
      - ./../app:/home/conquerer/app/
    networks: 
      - conquerer

  #ElasticSearch
  elasticsearch: 
    cap_add: 
      - IPC_LOCK
    container_name: elasticsearch
    environment: 
      - xpack.security.enabled=false
      - discovery.type=single-node
    image: "docker.elastic.co/elasticsearch/elasticsearch:8.12.1"
    ports: 
      - "9200:9200"
    restart: always
    ulimits: 
      memlock: 
        hard: -1
        soft: -1
      nofile: 
        hard: 65536
        soft: 65536
    volumes: 
      - "./esdata:/usr/share/elasticsearch/data"
    networks: 
      - conquerer

  #Kibana
  kibana: 
    container_name: kibana
    depends_on: 
      - elasticsearch
    environment: 
      - "ELASTICSEARCH_HOSTS=http://elasticsearch:9200"
    image: "docker.elastic.co/kibana/kibana:8.12.1"
    ports: 
      - "5601:5601"
    restart: always
    networks: 
      - conquerer